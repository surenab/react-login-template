{"ast":null,"code":"var _jsxFileName = \"/home/surenab/REACT_COURSE/react-4-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  console.log(action, state);\n\n  switch (action.type) {\n    case 'USER_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.valid.include('@')\n      };\n\n    case 'INPUT_BLUR':\n      return {\n        value: state.value,\n        isValid: state.value.valid.include('@')\n      };\n\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\n\nconst emailInitalState = {\n  value: '',\n  isValid: undefined\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('')\n  // const [emailIsValid, setEmailIsValid] = useState()\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, emailInitalState); // useEffect(() => {\n  //   console.log('EFFECT RUNNING')\n  // }, [])\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Check!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6,\n  //     )\n  //   }, 500)\n  //   return () => {\n  //     console.log('CLEAN')\n  //     clearTimeout(identifier)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n  // console.log(emailState)\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"xsXwAxeDO0H6N4b01KSbZKDcu+c=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/surenab/REACT_COURSE/react-4-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","console","log","type","value","val","isValid","valid","include","emailInitalState","undefined","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\n\nimport Card from '../UI/Card/Card'\nimport classes from './Login.module.css'\nimport Button from '../UI/Button/Button'\n\nconst emailReducer = (state, action) => {\n  console.log(action, state)\n  switch (action.type) {\n    case 'USER_INPUT':\n      return { value: action.val, isValid: action.val.valid.include('@') }\n    case 'INPUT_BLUR':\n      return { value: state.value, isValid: state.value.valid.include('@') }\n    default:\n      return { value: '', isValid: false }\n  }\n}\n\nconst emailInitalState = {\n  value: '',\n  isValid: undefined,\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('')\n  // const [emailIsValid, setEmailIsValid] = useState()\n  const [enteredPassword, setEnteredPassword] = useState('')\n  const [passwordIsValid, setPasswordIsValid] = useState()\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, emailInitalState)\n\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING')\n  // }, [])\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Check!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6,\n  //     )\n  //   }, 500)\n\n  //   return () => {\n  //     console.log('CLEAN')\n  //     clearTimeout(identifier)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  // console.log(emailState)\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n\n    setFormIsValid(\n      event.target.value.includes('@') && enteredPassword.trim().length > 6,\n    )\n  }\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value)\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6)\n  }\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  }\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6)\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    props.onLogin(emailState.value, enteredPassword)\n  }\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}