{"ast":null,"code":"var _jsxFileName = \"/home/surenab/REACT_COURSE/react-4-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  console.log(state, action);\n\n  switch (action.type) {\n    case 'USER_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.valid.include('@')\n      };\n\n    case 'INPUT_BLUR':\n      // return { value: state.value, isValid: state.value.valid.include('@') }\n      return {\n        value: state.value,\n        isValid: state.value\n      };\n\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\n\nconst emailInitalState = {\n  value: '',\n  isValid: undefined\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n\n    case 'INPUT_BLUR':\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\n\nconst passwordInitalState = {\n  value: '',\n  isValid: undefined\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('')\n  // const [emailIsValid, setEmailIsValid] = useState()\n  // const [enteredPassword, setEnteredPassword] = useState('')\n  // const [passwordIsValid, setPasswordIsValid] = useState()\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, emailInitalState);\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, passwordInitalState); // useEffect(() => {\n  //   console.log('EFFECT RUNNING')\n  // }, [])\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Check!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6,\n  //     )\n  //   }, 500)\n  //   return () => {\n  //     console.log('CLEAN')\n  //     clearTimeout(identifier)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n  // console.log(emailState)\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.value.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"6vSS9LkBwdzhYHqaq/Sw8dlu2UE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/surenab/REACT_COURSE/react-4-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","console","log","type","value","val","isValid","valid","include","emailInitalState","undefined","passwordReducer","trim","length","passwordInitalState","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","includes","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\n\nimport Card from '../UI/Card/Card'\nimport classes from './Login.module.css'\nimport Button from '../UI/Button/Button'\n\nconst emailReducer = (state, action) => {\n  console.log(state, action)\n  switch (action.type) {\n    case 'USER_INPUT':\n      return { value: action.val, isValid: action.val.valid.include('@') }\n    case 'INPUT_BLUR':\n      // return { value: state.value, isValid: state.value.valid.include('@') }\n      return {value: state.value, isValid: state.value}\n    default:\n      return { value: '', isValid: false }\n  }\n}\n\nconst emailInitalState = {\n  value: '',\n  isValid: undefined,\n}\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_INPUT':\n      return { value: action.val, isValid: action.val.trim().length > 6 }\n    case 'INPUT_BLUR':\n      return { value: state.value, isValid: state.value.trim().length > 6 }\n    default:\n      return { value: '', isValid: false }\n  }\n}\n\nconst passwordInitalState = {\n  value: '',\n  isValid: undefined,\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('')\n  // const [emailIsValid, setEmailIsValid] = useState()\n  // const [enteredPassword, setEnteredPassword] = useState('')\n  // const [passwordIsValid, setPasswordIsValid] = useState()\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, emailInitalState)\n  const [passwordState, dispatchPassword] = useReducer(\n    passwordReducer,\n    passwordInitalState,\n  )\n\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING')\n  // }, [])\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Check!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6,\n  //     )\n  //   }, 500)\n\n  //   return () => {\n  //     console.log('CLEAN')\n  //     clearTimeout(identifier)\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  // console.log(emailState)\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.value.trim().length > 6,\n    )\n  }\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6)\n  }\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  }\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR' })\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    props.onLogin(emailState.value, passwordState.value)\n  }\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}